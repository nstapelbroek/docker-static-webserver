user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Map the PID file to a directory that exists
pid /run/nginx.pid;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include h5bp/media_types/media_types.conf;

    # Set character encodings.
    include h5bp/media_types/character_encodings.conf;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;
    error_log /dev/stderr warn;

    # Hide Nginx version information.
    include h5bp/security/server_software_information.conf;

    # Enable gzip compression.
    include h5bp/web_performance/compression.conf;

    # Specify file cache expiration.
    include h5bp/web_performance/cache_expiration.conf;

    # Add X-XSS-Protection for HTML documents.
    # h5bp/security/x-xss-protection.conf
    map $sent_http_content_type $x_xss_protection {
        #           (1)    (2)
        ~*text/html "1; mode=block";
    }

    # Add X-Frame-Options for HTML documents.
    # h5bp/security/x-frame-options.conf
    map $sent_http_content_type $x_frame_options {
        ~*text/html DENY;
    }

    # Add Content-Security-Policy for HTML documents.
    # h5bp/security/content-security-policy.conf
    map $sent_http_content_type $content_security_policy {
        ~*text/(html|javascript)|application/pdf|xml "default-src 'self'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests";
    }

    # Add Referrer-Policy for HTML documents.
    # h5bp/security/referrer-policy.conf.conf
    map $sent_http_content_type $referrer_policy {
        ~*text/(css|html|javascript)|application\/pdf|xml "strict-origin-when-cross-origin";
    }

    # Add X-UA-Compatible for HTML documents.
    # h5bp/internet_explorer/x-ua-compatible.conf
    map $sent_http_content_type $x_ua_compatible {
        ~*text/html "IE=edge";
    }

    # Add Access-Control-Allow-Origin.
    # h5bp/cross-origin/requests.conf
    map $sent_http_content_type $cors {
        # Images
        ~*image/ "*";

        # Web fonts
        ~*font/ "*";
        ~*application/vnd.ms-fontobject "*";
        ~*application/x-font-ttf "*";
        ~*application/font-woff "*";
        ~*application/x-font-woff "*";
        ~*application/font-woff2 "*";
    }

    # Cache informations about FDs, frequently accessed files
    include h5bp/web_performance/cache-file-descriptors.conf;

    # There is (hopefully) no server side logic here, so no need to accept big request bodies
    client_max_body_size 1k;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile on;

    # Don't buffer data-sends (disable Nagle algorithm).
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Kind of the opposite of nodelay
    tcp_nopush off;

    # Include vhost setup in different config file
    include /etc/nginx/vhost.conf;
}
